{"version":3,"sources":["components/Link/index.js","components/Container/index.js","store/index.js","components/Header/index.js","utils/shortenAddress.js","components/Card/index.js","store/staticTriggers.js","components/Input/index.js","components/Card/Cards/triggerEthPriceDropCard.js","store/staticActions.js","components/Card/Cards/actionTransferCard.js","components/Task/index.js","components/TaskHistory/index.js","scenes/Task/index.js","components/Card/Cards/comingSoonCard.js","components/Card/Cards/triggerEthBlockMinedCard.js","utils/getCardViaType.js","scenes/Create/index.js","routes.js","scenes/Landing/index.js","styles/theme.js","styles/index.js","styles/shorthand.js","styles/global.js","App.js","serviceWorker.js","index.js"],"names":["components_Link","props","react_default","a","createElement","Link","Object","assign","className","concat","Container","styled","div","_templateObject","initialState","ethereum","web3","window","reducer","combineReducers","state","arguments","length","undefined","action","type","objectSpread","createStore","compose","applyMiddleware","reduxThunk","reduxDevToolsExt","GlobalStateProvider","dispatch","useGlobalState","Address","Header_templateObject","Header","_useGlobalState","value","slicedToArray","hash","get","index_es","position","components_Container","to","variant","icons_index_es","lib_default","diameter","seed","jsNumberForAddress","address","substring","num","shortenAddress","StyledArrow","PlayArrow","Card_templateObject","StyledCard","Card","_templateObject2","withStyles","_ref","title","color","isTrigger","isDisplay","disabled","objectWithoutProperties","data-display","data-trigger","data-disabled","CardContent_default","Typography_default","gutterBottom","component","children","staticTriggers","fields","name","Input","inline","_ref$value","margin","fullWidth","InputProps","style","lineHeight","TriggerEthPriceDropCard","_this","this","enableInputs","price","onChange","_useState","useState","_useState2","values","setValues","triggers","find","trigger","handleChange","field","e","newValues","defineProperty","target","components_Card","map","key","bind","label","staticActions","ActionTransfer","amount","toAddress","actions","StyledFormGroup","FormGroup","Task_templateObject","ExpansionPanelSummary","root","padding","boxShadow","&$expanded","minHeight","content","expanded","ExpansionPanelSummary_default","muiName","Task","task","isActive","setExpanded","_useState3","_useState4","ExpansionPanel_default","Task_ExpansionPanelSummary","triggerEthPriceDropCard","renderTriggerCard","actionTransferCard","renderActionCard","ExpansionPanelDetails_default","components_TaskHistory","FormControlLabel_default","control","Checkbox_default","TaskHistory","classes","taskId","width","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","id","status","time","row","TaskScene","data","components_Task","ComingSoonCard","fontStyle","getCardViaType","EthPriceDrop","EthTransferCard","BlockMined","ComingSoon","Scrollable","Create_templateObject","StyledButton","Button","Create_templateObject2","theme","white","_ref2","CreateButton","routes","path","selectedTrigger","setSelectedTrigger","selectedAction","setSelectedAction","cardType","console","log","handleClick","TriggerCard","onClick","comingSoonCard","ActionCard","Create_CreateButton","exact","baseColors","gray10","gray20","gray35","gray","gray50","gray85","black","red","orange","purple","blue","blueDark","green","greenLightest","namedColors","success","error","warning","info","colors","text","grayDarker","highlight","z","header","fonts","default","createMuiTheme","typography","fontFamily","useNextVariants","fontSize","overrides","MuiIcon","navbarHeight","borderRadius","smaller","small","medium","large","larger","largest","huge","tight","loose","inset","shorthandSpacing","toConsumableArray","Array","_","i","colorsArray","widthArray","createGlobalStyle","global_templateObject","join","outline","App","BrowserRouter","styled_components_browser_esm","global","route","Route","Component","Boolean","location","hostname","match","assist","init","dappId","networkId","onboard","then","catch","msg","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6f31d29e.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from \"react-router-dom\";\nexport default (props) => {\n  return <Link {...props} className={`noUnderline ${props.className || ''}`} />\n}","import styled from 'styled-components'\nconst Container = styled.div`\n  width: 100%;\n  padding: 15px;\n  margin-right: auto;\n  margin-left: auto; }\n  @media (min-width: 576px) { max-width: 540px; } \n  @media (min-width: 768px) { max-width: 720px; }\n  @media (min-width: 992px) { max-width: 960px; }\n  @media (min-width: 1200px) { max-width: 1140px; }\n`\n\nexport default Container","import { applyMiddleware, combineReducers, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport { createStore } from 'react-hooks-global-state';\nimport { reduxDevToolsExt } from 'react-hooks-global-state/src/devtools';\n\nconst initialState = { \n  ethereum: {\n    web3: window.web3\n  }\n};\n\nconst ethereumReducer = (state = initialState.ethereum, action) => {\n  switch (action.type) {\n    case 'receiveWeb3': return {\n      ...state,\n      web3: action.web3\n    };\n    default: return state;\n  }\n}\n\nconst reducer = combineReducers({\n  ethereum: ethereumReducer\n});\n\nexport const { GlobalStateProvider, dispatch, useGlobalState } = createStore(\n  reducer,\n  initialState,\n  compose(\n    applyMiddleware(reduxThunk),\n    reduxDevToolsExt(),\n  ),\n);","import React from 'react'\nimport Link from \"../Link\";\nimport Container from \"../Container\";\nimport { AppBar, Typography } from '@material-ui/core'\nimport shortenAddress from '../../utils/shortenAddress'\nimport { get } from \"lodash\";\nimport Jazzicon, { jsNumberForAddress } from 'react-jazzicon'\nimport { useGlobalState } from '../../store'\nimport {  PlayArrow } from '@material-ui/icons'\nimport styled from 'styled-components'\nconst Address = styled.div`\n    background-color: rgba(255,255,255, .2);\n    border-radius: 10px;\n    padding: 0 6px;\n    display: flex;\n    align-items: center;\n`\nexport default () => {\n    const [value] = useGlobalState('ethereum');\n    const hash = get(value, 'web3.eth.defaultAccount')\n    return <AppBar position=\"static\" className='bg-blue'>\n    <Container className=\"f-jcsb f-row\">\n    <div className='f-aic'>\n      <Link to ='/' className=\"f-aic mr30 txt-white\">\n        <Typography variant=\"h6\" className='txt-white'>eth</Typography>\n        <PlayArrow />\n        <Typography variant=\"h6\" className='txt-white'>that</Typography>\n      </Link>\n      <Typography><Link to='/tasks' className='txt-white mr20'>Tasks</Link></Typography>\n      <Typography><Link to='/create' className='txt-white'>Create</Link></Typography>\n      </div>\n      {hash && <Address>\n        <Jazzicon diameter={25} seed={jsNumberForAddress(hash)} className=\"mr15\" />\n        <Typography className='txt-white ml15'> {shortenAddress(hash)} </Typography>\n      </Address>\n      }\n      </Container>\n  </AppBar>\n  }","export default (address) => {\n  if (!address) return ''\n  const num = 3\n  return !!address && (address.substring(0, num + 2) + '...' + address.substring(address.length - num))\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport {  PlayArrow } from '@material-ui/icons'\nimport styled from 'styled-components'\n\nconst StyledArrow = styled(PlayArrow)`\nposition: absolute;\nz-index: 1;\ntop: 50%;\ntransform: translateY(-50%);\nfont-size: 60px !important;\nright: -38px;\n`\n\nconst StyledCard = styled(Card)`\n  min-width: 350px;\n  opacity: ${(props) => props['data-disabled'] && '.3' };\n  transform: ${(props) => props['data-disabled'] && 'scale(.9)' };\n  & + & {\n    padding-left: ${(props) => props['data-trigger'] && !props['data-display'] ? 'inherit' : '30px' };\n  }\n  border-top-right-radius: ${(props) => (props['data-display'] && props['data-trigger']) ? 0 : '' } !important;\n  border-bottom-right-radius: ${(props) => (props['data-display'] && props['data-trigger']) ? 0 : '' } !important;\n  border-top-left-radius: ${(props) => (props['data-display'] && !props['data-trigger']) ? 0 : '' } !important;\n  border-bottom-left-radius: ${(props) => (props['data-display'] && !props['data-trigger']) ? 0 : '' } !important;\n}\n`\n\nfunction SimpleCard({ title, color, isTrigger, isDisplay, className, disabled, ...props }) {\n  return (\n    <StyledCard \n      data-display={isDisplay}\n      data-trigger={isTrigger}\n      data-disabled={disabled}\n      className={`bg-${color} ${isDisplay ? '' : 'mb10'} relative overflow-visible ${className || ''}`} \n      {...props}\n      >\n      <CardContent>\n        <Typography className={`txt-white`} gutterBottom>\n          {isDisplay ? (isTrigger ? \"Trigger\" : \"Action\") : (isTrigger ? \"Trigger when:\" : \"Perform action:\") }\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\" className={'txt-white'}>\n          {title}\n        </Typography>\n        {props.children}\n      </CardContent>\n        {isDisplay && isTrigger && (<StyledArrow className={`txt-${color}`} />)}\n    </StyledCard>\n  );\n}\n\nSimpleCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles({})(SimpleCard);\n","// get('/trigger/id) =>\n\n// {\n//   type: 'ethPriceDrop',\n//   price: 220\n// }\n\n\n// get('/triggers) =>\n\nexport default [\n  {\n    type: 'ethPriceDrop',\n    fields: [{\n      name: 'price',\n      type: 'number'\n    }]\n  },\n  {\n    type: 'ethBlockMined',\n    fields: []\n    // fields: [{\n    //   name: 'interval',\n    //   placeholder: 'int',\n    //   type: 'number'\n    // }]\n  },\n  // {\n  //   type: 'ethPriceRise',\n  //   fields: [{\n  //     name: 'price',\n  //     type: 'number'\n  //   }]\n  // },\n  // {\n  //   type: 'comingSoon',\n  //   fields: [{\n  //     name: 'address',\n  //     type: 'hash'\n  //   }]\n  // },\n  // {\n  //   type: 'eventFire',\n  //   fields: [{\n  //     name: 'methodName',\n  //     type: 'string'\n  //   }]\n  // },\n]","import { TextField } from '@material-ui/core'\nimport React from 'react'\nexport default ({ inline, value = '', ...props }) => <TextField\n  variant=\"filled\"\n  margin='normal'\n  value={value}\n  fullWidth={inline ? false : true}\n  InputProps={{\n    style: {\n      lineHeight: 'normal',\n    }\n  }}\n  {...props}\n/>\n","import React, {useState} from 'react'\nimport Card from '../index.js'\nimport Typography from '@material-ui/core/Typography';\nimport triggers from '../../../store/staticTriggers'\nimport Input from '../../Input'\n\nfunction TriggerEthPriceDropCard({ isDisplay, price, enableInputs, onChange, ...props}) {\n\n  const title = `ETH prices drop below${isDisplay ? ':' : ''}`;\n  const color = \"red\";\n  const [values, setValues] = useState({})\n  const fields = triggers.find(trigger => trigger.type === 'ethPriceDrop').fields\n  const handleChange = (field,e) => {\n    const newValues = {\n      ...values,\n      [field.name]: e.target.value\n    }\n    setValues(newValues)\n    onChange && onChange(newValues, 'ethPriceDrop', 'action')\n  }\n\n  return (\n  \t<Card\n  \t\ttitle={title}\n  \t\tcolor={color}\n  \t\tisTrigger\n  \t\tisDisplay={isDisplay}\n      {...props}>\n      {fields.map(field => {\n        return isDisplay \n          ? <Typography key={field.name}>{field.name}</Typography> \n          : enableInputs && <Input \n            onChange={handleChange.bind(this,field)} \n            key={field.name} \n            value={values[field.name]}\n            label={field.name} \n            type={field.type} \n            />\n      })}\n  \t</Card>\n  );\n}\n\nexport default TriggerEthPriceDropCard;\n","export default [\n  {\n    type: 'ethTransfer',\n    fields: [\n      {\n      name: 'address',\n      type: 'hash'\n      },\n      {\n      name: 'amount',\n      type: 'number'\n      }\n    ]\n  },\n]","import React, { useState } from 'react'\nimport Card from '../index.js'\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport actions from '../../../store/staticActions'\nimport Input from '../../Input'\n\nfunction ActionTransfer({ isDisplay, amount, toAddress, enableInputs, children, onChange, ...props }) {\n\n  const title = `Transfer ETH${isDisplay ? ':' : ''}`;\n  const color = \"blue\";\n  const [values, setValues] = useState({})\n  const fields = actions.find(action => action.type === 'ethTransfer').fields\n  const handleChange = (field,e) => {\n    const newValues = {\n      ...values,\n      [field.name]: e.target.value\n    }\n    setValues(newValues)\n    onChange && onChange(newValues, 'ethTransfer', 'action')\n  }\n\n  return (\n  \t<Card\n  \t\ttitle={title}\n  \t\tcolor={color}\n  \t\tisTrigger={false}\n      isDisplay={isDisplay}\n      {...props}>\n      {fields.map(field => {\n        return isDisplay \n          ? <Typography key={field.name}>{field.name}</Typography> \n          : enableInputs && <Input \n            onChange={handleChange.bind(this,field)} \n            key={field.name} \n            value={values[field.name]}\n            label={field.name} \n            type={field.type} \n            />\n      })}\n      {children}\n      {/* { isDisplay ? \n        (\n        \t<Grid container spacing={24}>\n        \t\t<Grid item xs={6}>\n\t            <Typography className={`txt-white mt${10}`} gutterBottom>\n\t              Amount\n\t            </Typography>\n\t        \t\t<Typography variant=\"h5\" component=\"h2\" className={'txt-white'}>\n\t              {amount}\n\t            </Typography>\n\t            <Typography className={`txt-white mt${5}`} gutterBottom>\n\t              Token\n\t            </Typography>\n\t        \t\t<Typography variant=\"h5\" component=\"h2\" className={'txt-white'}>\n\t              {tokenSymbol}\n\t            </Typography>\n        \t\t</Grid>\n        \t\t<Grid item xs={6}>\n\t            <Typography className={`txt-white mt${10}`} gutterBottom>\n\t              From\n\t            </Typography>\n\t        \t\t<Typography variant=\"h5\" component=\"h2\" className={'txt-white'}>\n\t              {fromAddress}\n\t            </Typography>\n\t            <Typography className={`txt-white mt${5}`} gutterBottom>\n\t              To\n\t            </Typography>\n\t        \t\t<Typography variant=\"h5\" component=\"h2\" className={'txt-white'}>\n\t              {toAddress}\n\t            </Typography>\n        \t\t</Grid>\n        \t</Grid>\n        ) : (\n          <div>\n            <Typography className={`txt-white mt${10}`} gutterBottom>\n              Enter Price\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\" className={'txt-white'}>\n              Placeholder\n            </Typography>\n          </div>\n        )\n      } */}\n  \t</Card>\n  );\n}\n\nexport default ActionTransfer;","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { TaskHistory } from '../index.js'\nimport TriggerEthPriceDropCard from '../Card/Cards/triggerEthPriceDropCard'\nimport ActionTransferCard from '../Card/Cards/actionTransferCard'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport styled from 'styled-components'\n\nfunction renderTriggerCard(task) {\n\tif(task && task.trigger) {\n\t\treturn (<div></div>)\n\t}\n\telse {\n\t\treturn (\n\t\t\t<TriggerEthPriceDropCard isDisplay />\n\t\t)\t\t\n\t}\n} \n\nfunction renderActionCard(task) {\n\tif(task && task.action) {\n\t\treturn (<div></div>)\n\t}\n\telse {\n\t\treturn (\n\t\t\t<ActionTransferCard isDisplay />\n\t\t)\t\t\n\t}\n}\n\nconst StyledFormGroup = styled(FormGroup)`\n  margin-left: -90px;\n  z-index: 99;\n`\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    margin: '0',\n    padding: '0',\n    boxShadow: 'none',\n    '&$expanded': {\n      minHeight: 56,\n    },\n  },\n  content: {\n  \tmargin: '0',\n    '&$expanded': {\n      margin: '0',\n    },\n  },\n  expanded: {},\n})(props => <MuiExpansionPanelSummary {...props} />);\n\nExpansionPanelSummary.muiName = 'ExpansionPanelSummary';\n\nfunction Task(props) {\n  const { isDisplay, task, isActive } = props;\n  const [expanded, setExpanded] = useState(false);\n  const [active, setActive] = useState(isActive);\n\n  return (\n  \t<div className={`flex mb10`}>\n      <ExpansionPanel expanded={expanded} onChange={() => setExpanded(!expanded)}>\n        <ExpansionPanelSummary>\n  \t\t\t\t{ renderTriggerCard(task) }\n  \t\t\t\t{ renderActionCard(task) }\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <TaskHistory />\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <StyledFormGroup>\n  \t\t\t<FormControlLabel\n          control={\n            <Checkbox color=\"default\" value=\"checkedG\" />\n          }\n        \tlabel=\"Active\"\n      \t/>\n      </StyledFormGroup>\n  \t</div>\n  );\n}\n\nexport default Task;\n\n\n","import React from 'react'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nfunction TaskHistory(props) {\n  const { classes, taskId } = props;\n\n  // Get Task History for Task\n  const taskHistory = {\n  \tdata: [\n  \t\t{id: 1, status: 'Success', time: '2019-2-17 10:02 AM'},\n  \t\t{id: 2, status: 'Success', time: '2019-2-17 7:37 AM'},\n  \t\t{id: 3, status: 'Success', time: '2019-2-17 7:30 AM'}\n  \t]\n  }\n\n  return (\n    <div style={{width: '100%'}}>\n    \t<h3>Task History</h3>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Time</TableCell>\n            <TableCell>Status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {taskHistory.data.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>{row.time}</TableCell>\n              <TableCell>{row.status}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nexport default TaskHistory;","import React from 'react'\nimport { Container, Task } from '../../components'\n\nfunction TaskScene(props) {\n\n  // Get Tasks for user\n  const tasks = [\n  \t{id: 1},\n  \t{id: 2}\n  ];\n\n\treturn (\n\t\t<Container>\n\t  \t<h2>My Tasks</h2>\n      {tasks.map(data => (\n\t\t    <div>\n\t\t    \t<Task task={data} />\n\t\t    </div>\n      ))}\n\t\t</Container>\n\t)\n}\n\nexport default TaskScene;","import React from 'react'\nimport Card from '../index.js'\nimport Typography from '@material-ui/core/Typography';\n\nfunction ComingSoonCard(props) {\n  const { title, color, isTrigger } = props;\n\n  return (\n  \t<Card\n  \t\ttitle={title}\n  \t\tcolor={color}\n  \t\tisTrigger={isTrigger}\n  \t\tisDisplay={false}>\n      <div>\n        <Typography className={`txt-white mt${10}`} style= {{fontStyle: \"italic\"}} gutterBottom>\n          Coming Soon\n        </Typography>\n      </div>\n  \t</Card>\n  );\n}\n\nexport default ComingSoonCard;","import React from 'react'\nimport Card from '../index.js'\nimport Typography from '@material-ui/core/Typography';\nimport triggers from '../../../store/staticTriggers'\nimport Input from '../../Input'\n\nfunction TriggerEthPriceDropCard({isDisplay, price, ...props}) {\n\n  const title = `Every ETH block mined`;\n  const color = \"purple\";\n  const fields = triggers.find(trigger => trigger.type === 'ethBlockMined').fields\n\n  return (\n  \t<Card\n  \t\ttitle={title}\n  \t\tcolor={color}\n  \t\tisTrigger\n  \t\tisDisplay={isDisplay}\n      {...props}>\n      {fields.map(field => {\n        return isDisplay \n          ? <Typography key={field.name}>{field.name}</Typography> \n          : <Input key={field.name} label={field.name} {...field} />\n      })}\n  \t</Card>\n  );\n}\n\nexport default TriggerEthPriceDropCard;\n","import EthTransferCard from '../components/Card/Cards/actionTransferCard'\nimport ComingSoon from '../components/Card/Cards/comingSoonCard'\nimport EthPriceDrop from '../components/Card/Cards/triggerEthPriceDropCard'\nimport BlockMined from '../components/Card/Cards/triggerEthBlockMinedCard'\nexport default (type) => {\n  switch (type) {\n    case 'ethPriceDrop':\n      return EthPriceDrop \n    case 'ethTransfer':\n      return EthTransferCard \n    case 'ethBlockMined':\n      return BlockMined \n    case 'comingSoon':\n      return ComingSoon\n    default:\n      return () => {} \n  }\n}","import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport { Container } from '../../components'\nimport triggers from '../../store/staticTriggers'\nimport actions from '../../store/staticActions'\nimport getCardViaType from '../../utils/getCardViaType'\nimport ComingSoonCard from '../../components/Card/Cards/comingSoonCard'\nimport Button from '@material-ui/core/Button';\n\nconst Scrollable = styled.div`\n  height: 100%;\n  max-height: 800px;\n  overflow: scroll;\n`\nconst StyledButton = styled(Button)`\n  margin-top: 20px !important;\n  color: ${({ theme }) => theme.white } !important;\n  font-weight: 900 !important;\n  border-color: ${({ theme }) => theme.white } !important;\n`\nconst CreateButton = (props) => <StyledButton \n  variant=\"outlined\" \n  fullWidth\n  {...props}>\n  Create\n</StyledButton>\n\nexport default () => {\n  const [selectedTrigger, setSelectedTrigger] = useState({})\n  const [selectedAction, setSelectedAction] = useState({})\n  const handleChange = (values, name, cardType) => {\n    console.log('values, name, cardType', values, name, cardType)\n    if(cardType === 'action') setSelectedAction({ type: name, ...values })\n    if(cardType === 'trigger') setSelectedTrigger({ type: name, ...values })\n  }\n\n  const handleClick = () => {\n    console.log(selectedTrigger, selectedAction)\n  }\n\n  return <Container className='flex'>\n    <div className='mr20'>\n      <h2>Select Trigger</h2>\n      <Scrollable>\n        {triggers.map(trigger => {\n          const TriggerCard = getCardViaType(trigger.type) \n          return <TriggerCard \n            onClick={()=>setSelectedTrigger({type: trigger.type})}\n            enableInputs={trigger.type === selectedTrigger.type} \n            disabled={selectedTrigger.type && trigger.type !== selectedTrigger.type} \n            onChange={handleChange}\n            key={trigger.type} \n            className='mb10 pointer' />\n        })}\n        <ComingSoonCard title=\"Contract Event fires\" color=\"green\" />\n        <ComingSoonCard title=\"Token transfer occurs\" color=\"blueDark\" />\n      </Scrollable>\n    </div>\n    <div>\n      <h2>Select Action</h2>\n      <Scrollable>\n        {actions.map(action=> {\n          const ActionCard = getCardViaType(action.type) \n          return <ActionCard\n            onClick={()=>setSelectedAction({type: action.type})}\n            enableInputs={action.type === selectedAction.type} \n            disabled={selectedAction.type && (action.type !== selectedAction.type)} \n            key={action.type} \n            onChange={handleChange}\n            className='mb10 pointer'>\n              {selectedAction.type && selectedTrigger.type && <CreateButton onClick={handleClick} />}\n            </ActionCard>\n        })}\n        <ComingSoonCard title=\"Send SMS Message\" color=\"orange\" />\n        <ComingSoonCard title=\"Send Email\" color=\"black\" />\n      </Scrollable>\n      </div>\n    </Container>\n}","import Landing from './scenes/Landing'\nimport Task from './scenes/Task'\nimport Create from './scenes/Create'\nlet routes = [\n  { path: '/tasks',     component: Task },\n  { path: '/create',     component: Create },\n  { path: '/',          component: Landing, exact: true }\n]\nexport default routes","import React from 'react'\nimport { Container } from '../../components'\nimport TriggerEthPriceDropCard from '../../components/Card/Cards/triggerEthPriceDropCard'\nimport ActionTransferCard from '../../components/Card/Cards/actionTransferCard'\n\nexport default () => {\n  return <Container>\n  \t<h2>My Tasks</h2>\n  \t<TriggerEthPriceDropCard isDisplay={true} price={100} />\n  \t<TriggerEthPriceDropCard isDisplay={false} price={100} />\n  \t<ActionTransferCard isDisplay={true} />\n  \t<ActionTransferCard isDisplay={false} />\n  </Container>\n}","import { createMuiTheme } from '@material-ui/core/styles'\n/*\n*\n* Blends and Meshes global style settings\n* for use in styled components\n*\n*/\n\nconst baseColors = {\n  white:        '#ffffff',\n  gray10:       '#F4F4F4',\n  gray20:       '#E6E6E6',\n  gray35:       '#B6B6B6',\n  gray:         '#B6B6B6',\n  gray50:       '#8E8E8E',\n  gray85:       '#4A4A4A',\n  black:        '#333333',\n  red:          '#f3404e',\n  orange:       '#f3b805',\n  purple:       '#6039f1',\n  blue:         '#337DF4',\n  blueDark:     '#093479',\n  green:        '#00A86B',\n  greenLightest:'#D9F7EC'\n}\n\nconst namedColors = {\n  success: baseColors.green,\n  error: baseColors.red,\n  warning: baseColors.orange,\n  info: baseColors.purple\n}\n\nexport const colors = {\n  ...baseColors,\n  ...namedColors,\n  text: baseColors.grayDarker,\n  highlight: baseColors.greenLightest\n}\n\nconst baseIndex = 120000 // setting high to override any rouge bootstrap and other library z-indexes\nconst z = {\n  header: baseIndex\n}\n\nconst dimensions = {\n  navbarHeight: 50\n}\n\nconst other = {\n  borderRadius: '5px'\n}\n\nexport const boxShadow = {\n  default: '0px 2px 40px rgb(33, 33, 33, .16), 0px 4px 6px rgb(33, 33, 33, .18)',\n  tight: '0 2px 4px 0 rgba(0,0,0,0.25)',\n  loose: `0 3px 20px 0 rgba(33,33,33,0.18)`,\n  inset: `inset 0 1px 3px 0  rgba(0,0,0,0.25)`\n}\n\nexport const fonts = {\n  default: \"'Open Sans', sans-serif\",\n}\n\nexport const muiTheme = createMuiTheme({\n  typography: {\n    fontFamily: fonts.default,\n    useNextVariants: true,\n    fontSize: 14\n  },\n  overrides: {\n    MuiIcon: { root: { fontSize: 14 }}\n  }\n})\n\nexport const screenSizes = {\n  smaller:  '420px',\n  small:  '576px',\n  medium: '768px',\n  large: '1024px',\n  larger: '1200px',\n  largest: '1440px',\n  huge: '1820px'\n}\n\nconst theme = {\n  ...colors,\n  ...dimensions,\n  ...other,\n  ...screenSizes,\n  fonts,\n  z,\n  boxShadow\n}\n\nexport default theme\n","import theme from './theme'\nexport * from './theme'\nexport default theme","import { map } from 'lodash'\nimport theme, { colors } from './index'\n\nlet shorthandSpacing = [...Array(51)].map((_, i) => {\n  return `\n  .m${i}{ margin: ${i}px !important;}\n  .mt${i}{ margin-top: ${i}px !important;}\n  .mb${i}{ margin-bottom: ${i}px !important;}\n  .ml${i}{ margin-left: ${i}px !important;}\n  .mr${i}{ margin-right: ${i}px !important;}\n  .mx${i}{ margin-right: ${i}px !important; margin-left: ${i}px !important;}\n  .my${i}{ margin-top: ${i}px !important; margin-bottom: ${i}px !important;}\n  .p${i}{ padding: ${i}px !important;}\n  .pt${i}{ padding-top: ${i}px !important;}\n  .pb${i}{ padding-bottom: ${i}px !important;}\n  .pl${i}{ padding-left: ${i}px !important;}\n  .pr${i}{ padding-right: ${i}px !important;}\n  .px${i}{ padding-right: ${i}px !important; padding-left: ${i}px !important;}\n  .py${i}{ padding-top: ${i}px !important; padding-bottom: ${i}px !important;}\n  .w${i}{ width: ${i}px !important; }\n  .h${i}{ height: ${i}px !important; }\n  `\n})\n\nconst colorsArray = map(colors, (value, key) => `\n  .txt-${key}{ color: ${value} !important;}\n  .bg-${key}{ background-color: ${value} !important;}\n`)\n\nconst widthArray = [...Array(9)].map((_, i) => `\n  .w${i}00{ width: ${i}00px !important; }\n`)\n\n// ${screenArray.join(' ')}\nexport default () => `\n${shorthandSpacing.join(' ')}\n${colorsArray.join(' ')}\n${widthArray.join(' ')}\n.m-y-auto{margin-top:auto;margin-bottom:auto;}\n.m-x-auto{margin-left:auto;margin-right:auto;}\n.m-auto { margin:auto; }\n\n.noPsuedo{\n  &:after{display: none !important;}\n  &:before{display: none !important;}\n}\n.noPointer { cursor: default !important; }\n.pointer { cursor: pointer !important; }\n.noUnderline { text-decoration: none;}\n.underline { text-decoration: underline;}\n.circle { border-radius: 50%; }\n\n.flex, .f { display: flex !important;}\n.wrap { flex-wrap: wrap; }\n.if { display: inline-flex !important;}\n.fill { flex: 1; }\n.f-row { display: flex !important; flex-direction: row !important;}\n.f-col { display: flex !important; flex-direction: column !important;}\n.f-jcc  { display: flex !important; justify-content: center !important;}\n.f-jcs  { display: flex !important; justify-content: flex-start !important;}\n.f-jce  { display: flex !important; justify-content: flex-end !important;}\n.f-jcs  { display: flex !important; justify-content: flex-start !important;}\n.f-jcsb  { display: flex !important; justify-content: space-between !important;}\n.f-jcsa  { display: flex !important; justify-content: space-around !important;}\n.f-acc  { display: flex !important; align-content: center !important;}\n.f-aic  { display: flex !important; align-items: center !important;}\n.f-aib { display: flex !important; align-items: baseline !important;}\n.f-ass { display: flex !important; align-self: stretch !important;}\n.f-ais { display: flex !important; align-items: stretch !important;}\n.f-aifs { display: flex !important; align-items: flex-start !important;}\n\n.box-shadow-tight   { box-shadow: ${theme.boxShadow.tight}}\n.box-shadow-loose   { box-shadow: ${theme.boxShadow.loose}}\n.box-shadow-inset   { box-shadow: ${theme.boxShadow.inset}}\n\n.relative { position: relative }\n.capitalize { text-transform: capitalize !important }\n\n.fullWidth, .w100 {min-width: 100%}\n.h100 {height: 100% !important}\n.fullHeight{min-height:100%}\n.justifyCenter{ justify-content: center; }\n.b-l-1 { border-left: 1px solid ${theme.outline} !important;}\n.b-t-1 { border-top: 1px solid ${theme.outline} !important;}\n.b-b-1 { border-bottom: 1px solid ${theme.outline} !important;}\n.border { border:1px solid ${theme.outline} !important;}\n\n.onHover { opacity: 0; } .onHover:hover { opacity: 1; }\n\n.tal { text-align: left !important; }\n.tar { text-align: right !important; }\n.tac { text-align: center !important; }\n\n.float-right, .fr { float: right !important; }\n.float-left, .fl { float: left !important; }\n\n.m-y-auto{margin-top:auto;margin-bottom:auto;}\n\n.text-wrap-per-line{\n  white-space: pre-line !important;\n}\n.overflow-visible{ \n  overflow: visible !important;\n  overflow-y: visible !important;\n}\n`\n","import { createGlobalStyle } from 'styled-components'\nimport shorthand from './shorthand'\nexport default createGlobalStyle`\n  ${shorthand()}\n  body{\n    height: 100%;\n    margin: 0;\n  }\n  :focus {\n    outline: none;\n  }\n`","import React, { Component } from 'react';\nimport { Header } from './components'\nimport routes from './routes'\nimport { GlobalStateProvider } from './store';\nimport theme from './styles'\nimport GlobalStyles from './styles/global'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { ThemeProvider } from 'styled-components'\nimport './App.css';\n      \nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <ThemeProvider theme={theme}>\n          <GlobalStateProvider>\n            <GlobalStyles />\n            <Header />\n            {routes.map(route =>\n              <Route {...route} key={route.path} />\n            )}\n          </GlobalStateProvider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport assist from 'bnc-assist'\nimport { dispatch } from './store' \nimport * as serviceWorker from './serviceWorker';\nvar bncAssistConfig = {\n  dappId: '26fb439f-ff1e-48f8-9ddf-29a6dcf7fd49',       // [String] The API key supplied to you by Blocknative when you sign up for an account\n  networkId:  4 // [Integer] The network ID of the Ethereum network your dapp is deployd on.\n};\n\nvar assistInstance = assist.init(bncAssistConfig);\nassistInstance.onboard()\n  .then(function(success) {\n    console.log('success', success)\n    dispatch({\n      type: 'receiveWeb3',\n      web3: window.web3\n    })\n    // User has been successfully onboarded and is ready to transact\n    // This means we can be sure of the follwing user properties:\n    //  - They are using a compatible browser\n    //  - They have a web3-enabled wallet installed\n    //  - The wallet is connected to the config-specified networkId\n    //  - The wallet is unlocked and contains at least `minimumBalance` in wei\n    //  - They have connected their wallet to the dapp, congruent with EIP1102\n  })\n  .catch(function(error) {\n    // The user exited onboarding before completion\n    // Will let you know what stage of onboarding the user was up to when they exited\n    console.log(error.msg);\n  })\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
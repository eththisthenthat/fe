{"version":3,"sources":["static/team.jpg","components/Link/index.js","components/Container/index.js","utils/shortenAddress.js","store/index.js","components/Header/index.js","components/Card/index.js","store/staticTriggers.js","components/Input/index.js","components/Card/Cards/triggerEthPriceDropCard.js","store/staticActions.js","components/Card/Cards/actionTransferCard.js","components/Task/index.js","components/TaskHistory/index.js","scenes/Task/index.js","components/Card/Cards/comingSoonCard.js","components/Card/Cards/triggerEthBlockMinedCard.js","utils/getCardViaType.js","scenes/Create/index.js","routes.js","scenes/Landing/index.js","styles/theme.js","styles/index.js","styles/shorthand.js","styles/global.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","components_Link","props","react_default","a","createElement","Link","Object","assign","className","concat","Container","styled","div","_templateObject","shortenAddress","address","substring","num","length","initialState","ethereum","web3","window","reducer","combineReducers","state","arguments","undefined","action","type","objectSpread","createStore","compose","applyMiddleware","reduxThunk","reduxDevToolsExt","GlobalStateProvider","dispatch","useGlobalState","Address","Header_templateObject","Header","_useGlobalState","value","slicedToArray","hash","get","index_es","position","components_Container","to","variant","icons_index_es","lib_default","diameter","seed","jsNumberForAddress","StyledArrow","PlayArrow","Card_templateObject","StyledCard","Card","_templateObject2","withStyles","_ref","title","color","isTrigger","isDisplay","disabled","isTask","objectWithoutProperties","data-display","data-trigger","data-disabled","data-task","CardContent_default","Typography_default","gutterBottom","component","children","staticTriggers","fields","name","Input","inline","_ref$value","margin","fullWidth","InputProps","style","lineHeight","TriggerEthPriceDropCard","_this","this","enableInputs","price","onChange","task","_useState","useState","_useState2","values","setValues","triggers","find","trigger","handleChange","field","e","newValues","defineProperty","target","components_Card","map","key","bind","label","staticActions","ActionTransfer","amount","toAddress","actions","shorten","StyledFormGroup","FormGroup","Task_templateObject","ExpansionPanelSummary","root","padding","boxShadow","&$expanded","minHeight","content","expanded","ExpansionPanelSummary_default","muiName","Task","setExpanded","_useState3","isActive","_useState4","active","setActive","_ref2","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","put","id","sent","console","log","stop","_x","apply","ExpansionPanel_default","Task_ExpansionPanelSummary","triggerId","triggerEthPriceDropCard","renderTriggerCard","actionTransferCard","renderActionCard","ExpansionPanelDetails_default","components_TaskHistory","FormControlLabel_default","control","Checkbox_default","checked","TaskHistory","taskHistory","width","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","row","i","moment","parseInt","startTime","format","status","Link_default","href","txHash","TaskScene","hasQueried","tasks","setTasks","then","response","data","Items","catch","error","components_Task","ComingSoonCard","fontStyle","getCardViaType","PriceBelow","EthTransferCard","BlockMined","ComingSoon","Scrollable","Create_templateObject","StyledButton","Button","Create_templateObject2","theme","white","CreateButton","routes","path","withRouter","selectedTrigger","setSelectedTrigger","selectedAction","setSelectedAction","cardType","handleClick","post","actionId","triggerMeta","omit","actionMeta","history","push","TriggerCard","onClick","comingSoonCard","ActionCard","Create_CreateButton","fontSize","Button_default","size","marginTop","role","aria-label","src","teampic","alt","exact","baseColors","gray10","gray20","gray35","gray","gray50","gray85","black","red","orange","purple","blue","blueDark","green","greenLightest","magenta","namedColors","success","warning","info","colors","text","grayDarker","highlight","z","header","fonts","default","createMuiTheme","typography","fontFamily","useNextVariants","overrides","MuiIcon","navbarHeight","borderRadius","smaller","small","medium","large","larger","largest","huge","tight","loose","inset","shorthandSpacing","toConsumableArray","Array","_","colorsArray","widthArray","createGlobalStyle","global_templateObject","join","outline","App","BrowserRouter","styled_components_browser_esm","global","route","Route","Component","Boolean","location","hostname","match","assist","init","dappId","networkId","onboard","msg","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19077eba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/team.8c20cbd1.jpg\";","import React from 'react'\nimport { Link } from \"react-router-dom\";\nexport default (props) => {\n  return <Link {...props} className={`noUnderline ${props.className || ''}`} />\n}","import styled from 'styled-components'\nconst Container = styled.div`\n  width: 100%;\n  padding: 15px;\n  margin-right: auto;\n  margin-left: auto; }\n  @media (min-width: 576px) { max-width: 540px; } \n  @media (min-width: 768px) { max-width: 720px; }\n  @media (min-width: 992px) { max-width: 960px; }\n  @media (min-width: 1200px) { max-width: 1140px; }\n`\n\nexport default Container","export default (address) => {\n  if (!address) return ''\n  const num = 3\n  return !!address && (address.substring(0, num + 2) + '...' + address.substring(address.length - num))\n}","import { applyMiddleware, combineReducers, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport { createStore } from 'react-hooks-global-state';\nimport { reduxDevToolsExt } from 'react-hooks-global-state/src/devtools';\n\nconst initialState = { \n  ethereum: {\n    web3: window.web3\n  }\n};\n\nconst ethereumReducer = (state = initialState.ethereum, action) => {\n  switch (action.type) {\n    case 'receiveWeb3': return {\n      ...state,\n      web3: action.web3\n    };\n    default: return state;\n  }\n}\n\nconst reducer = combineReducers({\n  ethereum: ethereumReducer\n});\n\nexport const { GlobalStateProvider, dispatch, useGlobalState } = createStore(\n  reducer,\n  initialState,\n  compose(\n    applyMiddleware(reduxThunk),\n    reduxDevToolsExt(),\n  ),\n);","import React from 'react'\nimport Link from \"../Link\";\nimport Container from \"../Container\";\nimport { AppBar, Typography } from '@material-ui/core'\nimport shortenAddress from '../../utils/shortenAddress'\nimport { get } from \"lodash\";\nimport Jazzicon, { jsNumberForAddress } from 'react-jazzicon'\nimport { useGlobalState } from '../../store'\nimport {  PlayArrow } from '@material-ui/icons'\nimport styled from 'styled-components'\nconst Address = styled.div`\n    background-color: rgba(255,255,255, .2);\n    border-radius: 10px;\n    padding: 0 6px;\n    display: flex;\n    align-items: center;\n`\nexport default () => {\n    const [value] = useGlobalState('ethereum');\n    const hash = get(value, 'web3.eth.defaultAccount')\n    return <AppBar position=\"static\" className='bg-blue'>\n    <Container className=\"f-jcsb f-row\">\n    <div className='f-aic'>\n      <Link to ='/' className=\"f-aic mr30 txt-white\">\n        <Typography variant=\"h6\" className='txt-white'>ethis</Typography>\n        <PlayArrow />\n        <Typography variant=\"h6\" className='txt-white'>that</Typography>\n      </Link>\n      <Typography><Link to='/tasks' className='txt-white mr20'>Tasks</Link></Typography>\n      <Typography><Link to='/create' className='txt-white'>Create</Link></Typography>\n      </div>\n      {hash && <Address>\n        <Jazzicon diameter={25} seed={jsNumberForAddress(hash)} className=\"mr15\" />\n        <Typography className='txt-white ml15'> {shortenAddress(hash)} </Typography>\n      </Address>\n      }\n      </Container>\n  </AppBar>\n  }","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport {  PlayArrow } from '@material-ui/icons'\nimport styled from 'styled-components'\n\nconst StyledArrow = styled(PlayArrow)`\nposition: absolute;\nz-index: 1;\ntop: 50%;\ntransform: translateY(-50%);\nfont-size: 60px !important;\nright: -38px;\n`\n\nconst StyledCard = styled(Card)`\n  width: 350px;\n  opacity: ${(props) => props['data-disabled'] && '.3' };\n  transform: ${(props) => props['data-disabled'] && 'scale(.9)' };\n  padding-left: ${(props) => !props['data-trigger'] && props['data-task'] ? '30px' : 'inherit' };\n  border-top-right-radius: ${(props) => (props['data-task'] && props['data-trigger']) ? 0 : '' } !important;\n  border-bottom-right-radius: ${(props) => (props['data-task'] && props['data-trigger']) ? 0 : '' } !important;\n  border-top-left-radius: ${(props) => (props['data-task'] && !props['data-trigger']) ? 0 : '' } !important;\n  border-bottom-left-radius: ${(props) => (props['data-task'] && !props['data-trigger']) ? 0 : '' } !important;\n}\n`\n\nfunction SimpleCard({ title, color, isTrigger, isDisplay, className, disabled, isTask, ...props }) {\n  return (\n    <StyledCard \n      data-display={isDisplay}\n      data-trigger={isTrigger}\n      data-disabled={disabled}\n      data-task={isTask}\n      className={`bg-${color} ${isDisplay ? '' : 'mb10'} relative overflow-visible ${className || ''}`} \n      {...props}\n      >\n      <CardContent>\n        <Typography className={`txt-white`} gutterBottom>\n          {isDisplay ? (isTrigger ? \"Trigger\" : \"Action\") : (isTrigger ? \"Trigger when:\" : \"Perform action:\") }\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\" className={'txt-white'}>\n          {title}\n        </Typography>\n        {props.children}\n      </CardContent>\n        {isDisplay && isTrigger && (<StyledArrow className={`txt-${color}`} />)}\n    </StyledCard>\n  );\n}\n\nSimpleCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles({})(SimpleCard);\n","// get('/trigger/id) =>\n\n// {\n//   type: 'eth-price-below',\n//   price: 220\n// }\n\n\n// get('/triggers) =>\n\nexport default [\n  {\n    type: 'eth-price-below',\n    fields: [{\n      name: 'price',\n      type: 'number'\n    }]\n  }\n  // ,\n  // {\n  //   type: 'eth-block-mined',\n  //   fields: []\n    // fields: [{\n    //   name: 'interval',\n    //   placeholder: 'int',\n    //   type: 'number'\n    // }]\n  // },\n  // {\n  //   type: 'ethPriceRise',\n  //   fields: [{\n  //     name: 'price',\n  //     type: 'number'\n  //   }]\n  // },\n  // {\n  //   type: 'comingSoon',\n  //   fields: [{\n  //     name: 'address',\n  //     type: 'hash'\n  //   }]\n  // },\n  // {\n  //   type: 'eventFire',\n  //   fields: [{\n  //     name: 'methodName',\n  //     type: 'string'\n  //   }]\n  // },\n]","import { TextField } from '@material-ui/core'\nimport React from 'react'\nexport default ({ inline, value = '', ...props }) => <TextField\n  variant=\"filled\"\n  margin='normal'\n  value={value}\n  fullWidth={inline ? false : true}\n  InputProps={{\n    style: {\n      lineHeight: 'normal',\n    }\n  }}\n  {...props}\n/>\n","import React, {useState} from 'react'\nimport Card from '../index.js'\nimport Typography from '@material-ui/core/Typography';\nimport triggers from '../../../store/staticTriggers'\nimport Input from '../../Input'\nimport { get } from 'lodash'\n\nfunction TriggerEthPriceDropCard({ isDisplay, price, enableInputs, onChange, task, ...props}) {\n\n  const title = `ETH prices drop below${isDisplay ? ':' : ''}`;\n  const color = \"red\";\n  const [values, setValues] = useState({})\n  const fields = triggers.find(trigger => trigger.type === 'eth-price-below').fields\n  const handleChange = (field,e) => {\n    const newValues = {\n      ...values,\n      [field.name]: e.target.value\n    }\n    setValues(newValues)\n    onChange && onChange(newValues, 'eth-price-below', 'trigger')\n  }\n\n  return (\n  \t<Card\n  \t\ttitle={title}\n  \t\tcolor={color}\n  \t\tisTrigger\n  \t\tisDisplay={isDisplay}\n      {...props}>\n      {fields.map(field => {\n        return isDisplay \n          ? (\n              <div key={field.name}>\n                <Typography className={`txt-white mt${10}`} gutterBottom>\n                  Price\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\" className={'txt-white'}>\n                  ${get(task, 'triggerMeta.price')}\n                </Typography>\n              </div>\n            )\n          : enableInputs && <Input \n            onChange={handleChange.bind(this,field)} \n            key={field.name} \n            value={values[field.name]}\n            label={field.name} \n            type={field.type} \n            />\n      })}\n  \t</Card>\n  );\n}\n\nexport default TriggerEthPriceDropCard;\n","export default [\n  {\n    type: 'eth-transfer',\n    fields: [\n      {\n      name: 'address',\n      type: 'hash'\n      },\n      {\n      name: 'amount',\n      type: 'number'\n      }\n    ]\n  },\n  // {\n  //   type: 'send-sms',\n  //   fields: [\n  //     {\n  //     name: 'number',\n  //     type: 'number'\n  //     },\n  //     {\n  //     name: 'message',\n  //     type: 'string'\n  //     }\n  //   ]\n  // },\n]","import React, { useState } from 'react'\nimport Card from '../index.js'\nimport Typography from '@material-ui/core/Typography';\nimport actions from '../../../store/staticActions'\nimport Input from '../../Input'\nimport shorten from '../../../utils/shortenAddress'\nimport { get } from 'lodash'\n\nfunction ActionTransfer({ isDisplay, amount, toAddress, enableInputs, children, onChange, task, ...props }) {\n\n  const title = `Transfer ETH${isDisplay ? ':' : ''}`;\n  const color = \"blue\";\n  const [values, setValues] = useState({})\n  const fields = actions.find(action => action.type === 'eth-transfer').fields\n  const handleChange = (field,e) => {\n    const newValues = {\n      ...values,\n      [field.name]: e.target.value\n    }\n    setValues(newValues)\n    onChange && onChange(newValues, 'eth-transfer', 'action')\n  }\n\n  return (\n  \t<Card\n  \t\ttitle={title}\n  \t\tcolor={color}\n  \t\tisTrigger={false}\n      isDisplay={isDisplay}\n      {...props}>\n      { isDisplay ?\n        <div>\n          <Typography className={`txt-white mt${10}`} gutterBottom>\n            Amount\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\" className={'txt-white'}>\n            {get(task, 'actionMeta.amount')} ETH\n          </Typography>\n          <Typography className={`txt-white mt${10}`} gutterBottom>\n            To\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\" className={'txt-white'}>\n            {shorten(get(task, 'actionMeta.address'))}\n          </Typography>\n        </div> : enableInputs && fields.map(field => {\n                return <Input \n                  onChange={handleChange.bind(this,field)} \n                  key={field.name} \n                  value={values[field.name]}\n                  label={field.name} \n                  type={field.type} \n                />\n          })\n      }\n      {children}\n  \t</Card>\n  );\n}\n\nexport default ActionTransfer;","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { TaskHistory } from '../index.js'\nimport TriggerEthPriceDropCard from '../Card/Cards/triggerEthPriceDropCard'\nimport ActionTransferCard from '../Card/Cards/actionTransferCard'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport axios from 'axios'\nimport styled from 'styled-components'\n\nfunction renderTriggerCard(task) {\n\tif(task.triggerId === 'eth-price-below') {\n\t\treturn (\n\t\t\t<TriggerEthPriceDropCard task={task} isDisplay />\n\t\t)\n\t}\n\telse {\n\t\treturn (\n\t\t\t<TriggerEthPriceDropCard task={task} isDisplay isTask/>\n\t\t)\t\t\n\t}\n} \n\nfunction renderActionCard(task) {\n\tif(task.triggerId === 'transfer-eth') {\n\t\treturn (\n\t\t\t<ActionTransferCard task={task} isDisplay isTask />\n\t\t)\n\t}\n\telse {\n\t\treturn (\n\t\t\t<ActionTransferCard task={task} isDisplay isTask/>\n\t\t)\t\t\n\t}\n}\n\nconst StyledFormGroup = styled(FormGroup)`\n  margin-left: -90px;\n  z-index: 99;\n`\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    margin: '0',\n    padding: '0',\n    boxShadow: 'none',\n    '&$expanded': {\n      minHeight: 56,\n    },\n  },\n  content: {\n  \tmargin: '0',\n    '&$expanded': {\n      margin: '0',\n    },\n  },\n  expanded: {},\n})(props => <MuiExpansionPanelSummary {...props} />);\n\nExpansionPanelSummary.muiName = 'ExpansionPanelSummary';\n\nfunction Task({ task, ...props}) {\n  const [expanded, setExpanded] = useState(false);\n  const [active, setActive] = useState(task.isActive);\n  const handleChange = async (e) => {\n    setActive(!active)\n    const res = await axios.put(`https://d0ob9xv927.execute-api.us-east-1.amazonaws.com/dev/tasks/${task.id}`,{\n      isActive: !active\n    })\n    console.log(res)\n    // handle api call\n  }\n\n  return (\n  \t<div className={`flex mb10`}>\n      <ExpansionPanel expanded={expanded} onChange={() => setExpanded(!expanded)}>\n        <ExpansionPanelSummary>\n  \t\t\t\t{ renderTriggerCard(task) }\n  \t\t\t\t{ renderActionCard(task) }\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <TaskHistory task={task}/>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <StyledFormGroup>\n  \t\t\t<FormControlLabel\n          control={ <Checkbox color=\"default\" checked={active} /> }\n          onChange={handleChange}\n        \tlabel=\"Active\"\n      \t/>\n      </StyledFormGroup>\n  \t</div>\n  );\n}\n\nexport default Task;\n\n\n","import React from 'react'\nimport moment from 'moment'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Link from '@material-ui/core/Link';\nimport shorten from '../../utils/shortenAddress'\n\nfunction TaskHistory({task, ...props}) {\n\n  // Get Task History for Task\n  const taskHistory = task.taskHistory;\n\n  return (\n    <div style={{width: '100%'}}>\n    \t<h3>Task History</h3>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Time</TableCell>\n            <TableCell>Status</TableCell>\n            <TableCell>Transaction</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {taskHistory.map((row,i) => (\n            <TableRow key={i}>\n              <TableCell>{moment(parseInt(row.startTime)).format('MMM Do YYYY H:mm')}</TableCell>\n              <TableCell>{row.status}</TableCell>\n              <TableCell>\n                <Link href={`https://rinkeby.etherscan.io/tx/${row.txHash}`} target=\"_blank\">\n                  { shorten(row.txHash) }\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nexport default TaskHistory;","import React, {useState} from 'react'\nimport axios from 'axios'\nimport { Container, Task, Link } from '../../components'\nimport { useGlobalState } from '../../store'\nimport { get } from 'lodash'\n\nfunction TaskScene(props) {\n\tlet hasQueried = false;\n\t const [ethereum] = useGlobalState('ethereum');\n  const hash = get(ethereum, 'web3.eth.defaultAccount')\n\tconst [tasks, setTasks] = useState([]);\n\n\tif(tasks.length === 0 && !hasQueried ) {\n\t  axios.get(`https://d0ob9xv927.execute-api.us-east-1.amazonaws.com/dev/userTasks/${hash}`)\n\t  .then(function (response) {\n\t    console.log('Success');\n\t    console.log(response);\n\t    hasQueried = true;\n\t    setTasks(response.data.Items)\n\t  })\n\t  .catch(function (error) {\n\t    console.log(error);\n\t  });\t\t\n  }\n  \n\n\treturn (\n\t\t<Container className=\"f-jcsa\">\n\t\t\t<div>\n\t\t  \t{tasks.length ? <h2>My Tasks</h2> : null}\n\t\t  \t{tasks.length ?\n\t\t      tasks.map((data, i) => (\n\t\t\t\t    <div key={i}>\n\t\t\t\t    \t<Task task={data} />\n\t\t\t\t    </div>\n\t\t      )) : <div className='tac mt20'>\n\t\t        <div>No Tasks available</div>\n            <Link to='/create' className='underline mt5 block'>Create Task</Link>\n          </div>\n\t    \t}\n      </div>\n\t\t</Container>\n\t)\n\n\n}\n\nexport default TaskScene;","import React from 'react'\nimport Card from '../index.js'\nimport Typography from '@material-ui/core/Typography';\n\nfunction ComingSoonCard({ title, color, isTrigger, ...props }) {\n\n  return (\n  \t<Card\n  \t\ttitle={title}\n  \t\tcolor={color}\n  \t\tisTrigger={isTrigger}\n  \t\tisDisplay={false}\n      {...props}>\n      <div>\n        <Typography className={`txt-white mt${10}`} style= {{fontStyle: \"italic\"}} gutterBottom>\n          Coming Soon\n        </Typography>\n      </div>\n  \t</Card>\n  );\n}\n\nexport default ComingSoonCard;","import React from 'react'\nimport Card from '../index.js'\nimport Typography from '@material-ui/core/Typography';\nimport triggers from '../../../store/staticTriggers'\nimport Input from '../../Input'\n\nfunction TriggerEthPriceDropCard({isDisplay, price, ...props}) {\n\n  const title = `Every ETH block mined`;\n  const color = \"purple\";\n  const fields = triggers.find(trigger => trigger.type === 'eth-block-mined').fields\n\n  return (\n  \t<Card\n  \t\ttitle={title}\n  \t\tcolor={color}\n  \t\tisTrigger\n  \t\tisDisplay={isDisplay}\n      {...props}>\n      {fields.map(field => {\n        return isDisplay \n          ? <Typography key={field.name}>{field.name}</Typography> \n          : <Input key={field.name} label={field.name} {...field} />\n      })}\n  \t</Card>\n  );\n}\n\nexport default TriggerEthPriceDropCard;\n","import EthTransferCard from '../components/Card/Cards/actionTransferCard'\nimport ComingSoon from '../components/Card/Cards/comingSoonCard'\nimport PriceBelow from '../components/Card/Cards/triggerEthPriceDropCard'\nimport BlockMined from '../components/Card/Cards/triggerEthBlockMinedCard'\nexport default (type) => {\n  switch (type) {\n    case 'eth-price-below':\n      return PriceBelow \n    case 'eth-transfer':\n      return EthTransferCard \n    case 'eth-block-mined':\n      return BlockMined \n    case 'coming-soon':\n      return ComingSoon\n    default:\n      return () => {} \n  }\n}","import React, {useState} from 'react'\nimport { withRouter } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useGlobalState } from '../../store'\nimport { Container } from '../../components'\nimport triggers from '../../store/staticTriggers'\nimport actions from '../../store/staticActions'\nimport getCardViaType from '../../utils/getCardViaType'\nimport ComingSoonCard from '../../components/Card/Cards/comingSoonCard'\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios'\nimport { omit, get } from 'lodash'\n\nconst Scrollable = styled.div`\n  height: 100%;\n  max-height: 800px;\n  overflow: scroll;\n`\nconst StyledButton = styled(Button)`\n  margin-top: 20px !important;\n  color: ${({ theme }) => theme.white } !important;\n  font-weight: 900 !important;\n  border-color: ${({ theme }) => theme.white } !important;\n`\nconst CreateButton = (props) => <StyledButton \n  variant=\"outlined\" \n  fullWidth\n  {...props}>\n  Create\n</StyledButton>\n\nexport default withRouter((props) => {\n  const [selectedTrigger, setSelectedTrigger] = useState({})\n  const [selectedAction, setSelectedAction] = useState({})\n  const [ethereum] = useGlobalState('ethereum');\n  const hash = get(ethereum, 'web3.eth.defaultAccount')\n  const handleChange = (values, name, cardType) => {\n    if(cardType === 'action') setSelectedAction({ type: name, ...values })\n    if(cardType === 'trigger') setSelectedTrigger({ type: name, ...values })\n  }\n\n  const handleClick = () => {\n    axios.post('https://d0ob9xv927.execute-api.us-east-1.amazonaws.com/dev/tasks',\n      {\n        \"triggerId\": selectedTrigger.type,\n        \"actionId\": selectedAction.type,\n        \"address\": hash,\n        \"isActive\": true,\n        \"triggerMeta\": {...omit(selectedTrigger, 'type')},\n        \"actionMeta\": {...omit(selectedAction, 'type')},\n    } ).then( res => {\n      props.history.push('/tasks')\n    })\n  }\n\n  return <Container className='f-jcsa'>\n    <div className='flex'>\n      <div className='mr20'>\n        <h2>Select Trigger</h2>\n        <Scrollable>\n          {triggers.map(trigger => {\n            const TriggerCard = getCardViaType(trigger.type) \n            return <TriggerCard \n              onClick={()=>setSelectedTrigger({type: trigger.type})}\n              enableInputs={trigger.type === selectedTrigger.type} \n              disabled={selectedTrigger.type && trigger.type !== selectedTrigger.type} \n              onChange={handleChange}\n              key={trigger.type} \n              className='mb10 pointer' />\n          })}\n          <ComingSoonCard className='notAllowed' disabled={selectedTrigger.type} isTrigger={true} title=\"Every ETH block mined\" color=\"purple\" />\n          <ComingSoonCard className='notAllowed' disabled={selectedTrigger.type} isTrigger={true} title=\"Contract Event fires\" color=\"green\" />\n          <ComingSoonCard className='notAllowed' disabled={selectedTrigger.type} isTrigger={true} title=\"Token transfer occurs\" color=\"blueDark\" />\n        </Scrollable>\n      </div>\n      <div>\n        <h2>Select Action</h2>\n        <Scrollable>\n          {actions.map(action=> {\n            const ActionCard = getCardViaType(action.type) \n            return <ActionCard\n              onClick={()=>setSelectedAction({type: action.type})}\n              enableInputs={action.type === selectedAction.type} \n              disabled={selectedAction.type && (action.type !== selectedAction.type)} \n              key={action.type} \n              onChange={handleChange}\n              className='mb10 pointer'>\n                {selectedAction.type && selectedTrigger.type && <CreateButton onClick={handleClick} />}\n              </ActionCard>\n          })}\n          <ComingSoonCard className='notAllowed' disabled={selectedAction.type} title=\"Add collateral to CDP\" color=\"magenta\" />\n          <ComingSoonCard className='notAllowed' disabled={selectedAction.type} title=\"Send SMS Message\" color=\"orange\" />\n          <ComingSoonCard className='notAllowed' disabled={selectedAction.type} title=\"Send Email\" color=\"black\" />\n        </Scrollable>\n      </div>\n      </div>\n    </Container>\n})","import Landing from './scenes/Landing'\nimport Task from './scenes/Task'\nimport Create from './scenes/Create'\nlet routes = [\n  { path: '/tasks',     component: Task },\n  { path: '/create',     component: Create },\n  { path: '/',          component: Landing, exact: true }\n]\nexport default routes","import React from 'react'\nimport { Container, Link } from '../../components'\nimport teampic from '../../static/team.jpg'\nimport Button from '@material-ui/core/Button';\nexport default () => {\n  return <Container>\n    <div className='tac'>\n      <h1 style={{fontSize: '150px', margin: '40px 0 0'}}>ETHTTT</h1>\n      <span>automating your blockchain transactions, inspired by IFTTT & Zapier</span>\n      <Link to='/create' className='block mt40'><Button variant=\"contained\" color='primary' size='large'>Get Started</Button></Link>\n    </div>\n    <div className='tac' style={{ marginTop: '150px'}}>\n      Made with <span role='img' aria-label='heart'>💖</span>by\n      <img src={teampic} alt='team' className='block m-x-auto w200'/>\n    </div>\n  </Container>\n}","import { createMuiTheme } from '@material-ui/core/styles'\n/*\n*\n* Blends and Meshes global style settings\n* for use in styled components\n*\n*/\n\nconst baseColors = {\n  white:        '#ffffff',\n  gray10:       '#F4F4F4',\n  gray20:       '#E6E6E6',\n  gray35:       '#B6B6B6',\n  gray:         '#B6B6B6',\n  gray50:       '#8E8E8E',\n  gray85:       '#4A4A4A',\n  black:        '#333333',\n  red:          '#f3404e',\n  orange:       '#f3b805',\n  purple:       '#6039f1',\n  blue:         '#337DF4',\n  blueDark:     '#093479',\n  green:        '#00A86B',\n  greenLightest:'#D9F7EC',\n  magenta:       '#ea00a5'\n}\n\nconst namedColors = {\n  success: baseColors.green,\n  error: baseColors.red,\n  warning: baseColors.orange,\n  info: baseColors.purple\n}\n\nexport const colors = {\n  ...baseColors,\n  ...namedColors,\n  text: baseColors.grayDarker,\n  highlight: baseColors.greenLightest\n}\n\nconst baseIndex = 120000 // setting high to override any rouge bootstrap and other library z-indexes\nconst z = {\n  header: baseIndex\n}\n\nconst dimensions = {\n  navbarHeight: 50\n}\n\nconst other = {\n  borderRadius: '5px'\n}\n\nexport const boxShadow = {\n  default: '0px 2px 40px rgb(33, 33, 33, .16), 0px 4px 6px rgb(33, 33, 33, .18)',\n  tight: '0 2px 4px 0 rgba(0,0,0,0.25)',\n  loose: `0 3px 20px 0 rgba(33,33,33,0.18)`,\n  inset: `inset 0 1px 3px 0  rgba(0,0,0,0.25)`\n}\n\nexport const fonts = {\n  default: \"'Open Sans', sans-serif\",\n}\n\nexport const muiTheme = createMuiTheme({\n  typography: {\n    fontFamily: fonts.default,\n    useNextVariants: true,\n    fontSize: 14\n  },\n  overrides: {\n    MuiIcon: { root: { fontSize: 14 }}\n  }\n})\n\nexport const screenSizes = {\n  smaller:  '420px',\n  small:  '576px',\n  medium: '768px',\n  large: '1024px',\n  larger: '1200px',\n  largest: '1440px',\n  huge: '1820px'\n}\n\nconst theme = {\n  ...colors,\n  ...dimensions,\n  ...other,\n  ...screenSizes,\n  fonts,\n  z,\n  boxShadow\n}\n\nexport default theme\n","import theme from './theme'\nexport * from './theme'\nexport default theme","import { map } from 'lodash'\nimport theme, { colors } from './index'\n\nlet shorthandSpacing = [...Array(51)].map((_, i) => {\n  return `\n  .m${i}{ margin: ${i}px !important;}\n  .mt${i}{ margin-top: ${i}px !important;}\n  .mb${i}{ margin-bottom: ${i}px !important;}\n  .ml${i}{ margin-left: ${i}px !important;}\n  .mr${i}{ margin-right: ${i}px !important;}\n  .mx${i}{ margin-right: ${i}px !important; margin-left: ${i}px !important;}\n  .my${i}{ margin-top: ${i}px !important; margin-bottom: ${i}px !important;}\n  .p${i}{ padding: ${i}px !important;}\n  .pt${i}{ padding-top: ${i}px !important;}\n  .pb${i}{ padding-bottom: ${i}px !important;}\n  .pl${i}{ padding-left: ${i}px !important;}\n  .pr${i}{ padding-right: ${i}px !important;}\n  .px${i}{ padding-right: ${i}px !important; padding-left: ${i}px !important;}\n  .py${i}{ padding-top: ${i}px !important; padding-bottom: ${i}px !important;}\n  .w${i}{ width: ${i}px !important; }\n  .h${i}{ height: ${i}px !important; }\n  `\n})\n\nconst colorsArray = map(colors, (value, key) => `\n  .txt-${key}{ color: ${value} !important;}\n  .bg-${key}{ background-color: ${value} !important;}\n`)\n\nconst widthArray = [...Array(9)].map((_, i) => `\n  .w${i}00{ width: ${i}00px !important; }\n`)\n\n// ${screenArray.join(' ')}\nexport default () => `\n${shorthandSpacing.join(' ')}\n${colorsArray.join(' ')}\n${widthArray.join(' ')}\n.m-y-auto{margin-top:auto;margin-bottom:auto;}\n.m-x-auto{margin-left:auto;margin-right:auto;}\n.m-auto { margin:auto; }\n\n.noPsuedo{\n  &:after{display: none !important;}\n  &:before{display: none !important;}\n}\n.noPointer { cursor: default !important; }\n.notAllowed { cursor: not-allowed !important; }\n.pointer { cursor: pointer !important; }\n.noUnderline { text-decoration: none;}\n.underline { text-decoration: underline;}\n.circle { border-radius: 50%; }\n\n.flex, .f { display: flex !important;}\n.wrap { flex-wrap: wrap; }\n.if { display: inline-flex !important;}\n.fill { flex: 1; }\n.f-row { display: flex !important; flex-direction: row !important;}\n.f-col { display: flex !important; flex-direction: column !important;}\n.f-jcc  { display: flex !important; justify-content: center !important;}\n.f-jcs  { display: flex !important; justify-content: flex-start !important;}\n.f-jce  { display: flex !important; justify-content: flex-end !important;}\n.f-jcs  { display: flex !important; justify-content: flex-start !important;}\n.f-jcsb  { display: flex !important; justify-content: space-between !important;}\n.f-jcsa  { display: flex !important; justify-content: space-around !important;}\n.f-acc  { display: flex !important; align-content: center !important;}\n.f-aic  { display: flex !important; align-items: center !important;}\n.f-aib { display: flex !important; align-items: baseline !important;}\n.f-ass { display: flex !important; align-self: stretch !important;}\n.f-ais { display: flex !important; align-items: stretch !important;}\n.f-aifs { display: flex !important; align-items: flex-start !important;}\n\n.box-shadow-tight   { box-shadow: ${theme.boxShadow.tight}}\n.box-shadow-loose   { box-shadow: ${theme.boxShadow.loose}}\n.box-shadow-inset   { box-shadow: ${theme.boxShadow.inset}}\n\n.relative { position: relative }\n.block { display: block }\n.capitalize { text-transform: capitalize !important }\n\n.fullWidth, .w100 {min-width: 100%}\n.h100 {height: 100% !important}\n.fullHeight{min-height:100%}\n.justifyCenter{ justify-content: center; }\n.b-l-1 { border-left: 1px solid ${theme.outline} !important;}\n.b-t-1 { border-top: 1px solid ${theme.outline} !important;}\n.b-b-1 { border-bottom: 1px solid ${theme.outline} !important;}\n.border { border:1px solid ${theme.outline} !important;}\n\n.onHover { opacity: 0; } .onHover:hover { opacity: 1; }\n\n.tal { text-align: left !important; }\n.tar { text-align: right !important; }\n.tac { text-align: center !important; }\n\n.float-right, .fr { float: right !important; }\n.float-left, .fl { float: left !important; }\n\n.m-y-auto{margin-top:auto;margin-bottom:auto;}\n\n.text-wrap-per-line{\n  white-space: pre-line !important;\n}\n.overflow-visible{ \n  overflow: visible !important;\n  overflow-y: visible !important;\n}\n`\n","import { createGlobalStyle } from 'styled-components'\nimport shorthand from './shorthand'\nexport default createGlobalStyle`\n  ${shorthand()}\n  body{\n    height: 100%;\n    margin: 0;\n  }\n  :focus {\n    outline: none;\n  }\n`","import React, { Component } from 'react';\nimport { Header } from './components'\nimport routes from './routes'\nimport { GlobalStateProvider } from './store';\nimport theme from './styles'\nimport GlobalStyles from './styles/global'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { ThemeProvider } from 'styled-components'\nimport './App.css';\n      \nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <ThemeProvider theme={theme}>\n          <GlobalStateProvider>\n            <GlobalStyles />\n            <Header />\n            {routes.map(route =>\n              <Route {...route} key={route.path} />\n            )}\n          </GlobalStateProvider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport assist from 'bnc-assist'\nimport { dispatch } from './store' \nimport * as serviceWorker from './serviceWorker';\nvar bncAssistConfig = {\n  dappId: '26fb439f-ff1e-48f8-9ddf-29a6dcf7fd49',       // [String] The API key supplied to you by Blocknative when you sign up for an account\n  networkId:  4 // [Integer] The network ID of the Ethereum network your dapp is deployd on.\n};\n\nvar assistInstance = assist.init(bncAssistConfig);\nassistInstance.onboard()\n  .then(function(success) {\n    console.log('success', success)\n    dispatch({\n      type: 'receiveWeb3',\n      web3: window.web3\n    })\n    // User has been successfully onboarded and is ready to transact\n    // This means we can be sure of the follwing user properties:\n    //  - They are using a compatible browser\n    //  - They have a web3-enabled wallet installed\n    //  - The wallet is connected to the config-specified networkId\n    //  - The wallet is unlocked and contains at least `minimumBalance` in wei\n    //  - They have connected their wallet to the dapp, congruent with EIP1102\n  })\n  .catch(function(error) {\n    // The user exited onboarding before completion\n    // Will let you know what stage of onboarding the user was up to when they exited\n    console.log(error.msg);\n  })\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}